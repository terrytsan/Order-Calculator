{"version":3,"sources":["components/OrderSummary.js","components/Item.js","components/ModifierButton.js","components/ItemCustomisationModal.js","components/OrderSummaryModal.js","components/SearchBar.js","components/ContactNumberInput.js","components/DestinationSelector.js","App.js","reportWebVitals.js","index.js"],"names":["OrderSummary","totalPrice","totalNumItems","handleOrderSummaryClick","Container","onClick","Row","Col","className","toFixed","Item","item","price","handleAddItemClick","handleItemClick","style","margin","boxShadow","id","xs","fontSize","name","Button","ModifierButton","modifier","selectedItem","handleAddItemModifierButtonClick","handleRemoveItemModifierButtonClick","modifiers","some","m","variant","description","ItemCustomisationModal","modalShow","handleModalClose","handleAddCustomisedItemClick","handleItemNotesOnChange","Modal","show","onHide","animation","centered","Header","closeButton","Title","Body","map","onChange","type","placeholder","marginTop","marginLeft","width","createItemSummary","itemCountObj","handleRemoveItemOnClick","itemSummary","Object","keys","forEach","num","object","JSON","parse","test","undefined","notes","concat","reduce","result","i","paddingTop","paddingBottom","paddingRight","display","alignItems","verticalAlign","marginBottom","paddingLeft","flexDirection","justifyContent","removeButtonStyle","size","alignSelf","OrderSummaryModal","deliveryChargeOutput","selectedItems","contactNumber","address","deliveryCharge","countedItems","items","itemCount","key","stringify","countUniqueItems","fontWeight","total","inputStyle","SearchBar","ContactNumberInput","autoComplete","buttonStyle","DestinationSelector","addressInput","isCollection","onclickHandler","onAddressInputChange","onDeliveryChargeInputChange","textAlign","padding","step","App","state","originalItems","filteredItems","itemModifiers","showItemCustomisationModal","currentItem","currentItemNotes","showOrderSummaryModal","event","itemId","target","desiredItem","find","setState","handleItemCustomisationModalShow","handleItemCustomisationModalClose","modifierId","parseInt","desiredModifier","updatedCurrentItem","filter","updatedSelectedItems","handleOrderSummaryFooterClick","handleOrderSummaryModalShow","handleOrderSummaryModalClose","handleSearchBarChange","newList","searchText","value","toLowerCase","includes","handleContactNumberChange","handleDestinationButtonClick","console","log","handleAddressInputChange","inputAddress","handleDeliveryChargeInputChange","charge","parseFloat","itemNotes","updatedItem","indexToRemove","findIndex","_","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d2a67b6.chunk.js","sourcesContent":["import {Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction OrderSummary({totalPrice, totalNumItems, handleOrderSummaryClick}) {\r\n\treturn (\r\n\t\t<Container onClick={handleOrderSummaryClick}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Number of items: \" + totalNumItems}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Total cost: £\" + totalPrice.toFixed(2)}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default OrderSummary;","import {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction Item({item, price, handleAddItemClick, handleItemClick}) {\r\n\treturn (\r\n\t\t<Container style={{margin: '5px', boxShadow: \"0 1px 2px 0 rgba(0,0,0,0.2)\"}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col onClick={() => {\r\n\t\t\t\t\thandleItemClick(item.id);\r\n\t\t\t\t}} className=\"text-center\" xs={7}>\r\n\t\t\t\t\t<p style={{fontSize: \"small\"}}>{item.name}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<Col onClick={() => {\r\n\t\t\t\t\t\thandleItemClick(item.id);\r\n\t\t\t\t\t}} className=\"text-center\" xs={2}>\r\n\t\t\t\t\t\t<p>{\"£\" + price.toFixed(2)}</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Col className=\"text-center\" xs={2}>\r\n\t\t\t\t\t<Button name={item.id} onClick={handleAddItemClick}>Add</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default Item;","import {Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport './../App.css';\r\n\r\nfunction ModifierButton({modifier, selectedItem, handleAddItemModifierButtonClick, handleRemoveItemModifierButtonClick}) {\r\n\tif (selectedItem.modifiers.some((m) => m.id === modifier.id)) {\r\n\t\t// Render blue button if modifier already exists in selected item\r\n\t\treturn (\r\n\t\t\t<Button variant=\"primary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleRemoveItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t} else {\r\n\t\t// Otherwise gray button\r\n\t\treturn (\r\n\t\t\t<Button variant=\"secondary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleAddItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModifierButton;","import {Button, Modal} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport ModifierButton from \"./ModifierButton\";\r\n\r\nfunction ItemCustomisationModal({modalShow, modifiers, handleModalClose, selectedItem, handleAddItemModifierButtonClick, handleRemoveItemModifierButtonClick, handleAddCustomisedItemClick, handleItemNotesOnChange}) {\r\n\treturn (\r\n\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Item Customisation</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<p>{selectedItem.name}</p>\r\n\t\t\t\t{modifiers.map(modifier => <ModifierButton key={modifier.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   modifier={modifier}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   selectedItem={selectedItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleAddItemModifierButtonClick={handleAddItemModifierButtonClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleRemoveItemModifierButtonClick={handleRemoveItemModifierButtonClick}/>)}\r\n\t\t\t\t<input onChange={handleItemNotesOnChange} type=\"text\" placeholder=\"Notes\"\r\n\t\t\t\t\t   style={{marginTop: \"5px\", marginLeft: \"3px\"}}/>\r\n\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t<Button onClick={handleAddCustomisedItemClick}>Add</Button>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ItemCustomisationModal;","import {Button, Col, Modal} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {XCircleIcon} from '@primer/octicons-react';\r\n\r\n// Return an object. key: JSON.stringify(item) value: count of the item\r\nfunction countUniqueItems(items) {\r\n\tlet itemCount = {};\r\n\titems.forEach((item) => {\r\n\t\tlet key = JSON.stringify(item);\r\n\t\t// let key = item;\r\n\t\titemCount[key] = (itemCount[key] || 0) + 1;\r\n\t});\r\n\treturn itemCount;\r\n}\r\n\r\n// Given an object (with item and count), create the text summary of items\r\nfunction createItemSummary(itemCountObj, handleRemoveItemOnClick) {\r\n\t// Holds a list of summarised items (in human readable form)\r\n\tlet itemSummary = [];\r\n\tObject.keys(itemCountObj).forEach((item) => {\r\n\t\tlet num = itemCountObj[item];\r\n\t\t// parse into object\r\n\t\tlet object = JSON.parse(item);\r\n\t\tlet test = object.notes !== undefined ? object.notes : \"\";\r\n\t\titemSummary = itemSummary.concat(num + \"x \" + object.name + \" \" + object.modifiers.reduce((result, modifier) => {\r\n\t\t\treturn `${result} ${modifier.description}`;\r\n\t\t}, \"\") + test);\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{itemSummary.map((item, i) =>\r\n\t\t\t\t<div key={i + \"div\"} className=\"row\" style={{paddingTop: \"3px\", paddingBottom: \"3px\"}}>\r\n\t\t\t\t\t<Col xs={10} style={{paddingRight: \"0\", display: \"flex\", alignItems: \"center\"}}>\r\n\t\t\t\t\t\t<p key={i + \"itemText\"}\r\n\t\t\t\t\t\t   style={{fontSize: \"small\", verticalAlign: \"middle\", marginBottom: \"0\"}}>{item}</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{\r\n\t\t\t\t\t\tpaddingLeft: \"0\", paddingRight: \"5px\", display: \"flex\", flexDirection: \"column\",\r\n\t\t\t\t\t\tjustifyContent: \"center\"\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Button key={i} variant={\"danger\"} style={removeButtonStyle} onClick={() => {\r\n\t\t\t\t\t\t\t// Pass the item that should be removed\r\n\t\t\t\t\t\t\thandleRemoveItemOnClick(JSON.parse(Object.keys(itemCountObj)[i]));\r\n\t\t\t\t\t\t}}> <XCircleIcon size={16}/></Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction OrderSummaryModal({modalShow, handleModalClose, selectedItems, contactNumber, address, deliveryCharge, handleRemoveItemOnClick}) {\r\n\tlet countedItems = countUniqueItems(selectedItems);\r\n\r\n\t// Conditionally render delivery charge component\r\n\tlet deliveryChargeOutput;\r\n\tif (deliveryCharge !== 0) {\r\n\t\tdeliveryChargeOutput = <p style={{marginBottom: \"0\"}}>Delivery Charge £{deliveryCharge.toFixed(2)}</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Order Summary</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<p style={{fontWeight: \"bold\"}}>{contactNumber}</p>\r\n\t\t\t\t<p style={{fontWeight: \"bold\"}}>{address}</p>\r\n\r\n\t\t\t\t{createItemSummary(countedItems, handleRemoveItemOnClick)}\r\n\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t{deliveryChargeOutput}\r\n\t\t\t\t<p style={{fontWeight: \"bold\", fontSize: \"large\", marginTop: \"0\", marginBottom: \"0\"}}>Total Cost\r\n\t\t\t\t\t£{(selectedItems.reduce((total, item) => total + item.price, 0) + deliveryCharge).toFixed(2)}</p>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nconst removeButtonStyle = {\r\n\tfontSize: 'small',\r\n\tpaddingLeft: '5px',\r\n\tpaddingRight: '5px',\r\n\talignItems: 'center',\r\n\talignSelf: 'flex-end',\r\n\tverticalAlign: 'middle'\r\n};\r\nexport default OrderSummaryModal;\r\n","import React from \"react\";\r\n\r\nfunction SearchBar({onChange}) {\r\n\treturn (\r\n\t\t<input type=\"text\" placeholder=\"Search...\" onChange={onChange} style={inputStyle}/>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '6px',\r\n\twidth: '100%'\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nfunction ContactNumberInput({onChange}) {\r\n\r\n\t// Otherwise gray button\r\n\treturn (\r\n\t\t<div className=\"text-center\">\r\n\t\t\t<input style={inputStyle} type=\"text\" autoComplete=\"none\" placeholder=\"Contact Number\" onChange={onChange}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '5px',\r\n\twidth: '50%'\r\n};\r\n\r\nexport default ContactNumberInput;","import React from \"react\";\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\n\r\nfunction DestinationSelector({isCollection, onclickHandler, onAddressInputChange, onDeliveryChargeInputChange}) {\r\n\r\n\t// Conditionally render the address input (only if isCollection is false)\r\n\tlet addressInput;\r\n\tif (!isCollection) {\r\n\t\taddressInput =\r\n\r\n\t\t\t<Row style={{paddingTop: \"3px\", paddingBottom: \"3px\"}}>\r\n\t\t\t\t<Col xs={8} style={{paddingLeft: \"0\", paddingRight: \"0\"}}>\r\n\t\t\t\t\t<input onChange={onAddressInputChange} autoComplete=\"none\" placeholder=\"Address\"\r\n\t\t\t\t\t\t   style={{width: \"100%\"}}/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col style={{paddingRight: \"0\", textAlign: \"right\"}}>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col style={{padding: \"0\"}}>\r\n\t\t\t\t\t\t\t<p>£</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={11} style={{paddingLeft: \"3px\"}}>\r\n\t\t\t\t\t\t\t<input onChange={onDeliveryChargeInputChange} type=\"number\" step=\"0.1\" placeholder=\"Charge\"\r\n\t\t\t\t\t\t\t\t   style={{width: \"100%\"}}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"container-fluid\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Button name=\"collection\" variant={isCollection ? \"primary\" : \"secondary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Collection</Button>\r\n\t\t\t\t<Button name=\"delivery\" variant={isCollection ? \"secondary\" : \"primary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Delivery</Button>\r\n\t\t\t</Row>\r\n\t\t\t{addressInput}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst buttonStyle = {\r\n\tmargin: '5px'\r\n};\r\n\r\nexport default DestinationSelector;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './App.css';\nimport OrderSummary from \"./components/OrderSummary\";\nimport Item from \"./components/Item\";\nimport ItemCustomisationModal from \"./components/ItemCustomisationModal\";\nimport OrderSummaryModal from \"./components/OrderSummaryModal\";\nimport SearchBar from \"./components/SearchBar\";\nimport ContactNumberInput from \"./components/ContactNumberInput\";\nimport DestinationSelector from \"./components/DestinationSelector\";\nimport items from \"./items.json\";\n\nclass App extends Component {\n\tstate = {\n\t\tselectedItems: [],\n\t\toriginalItems: items.items,\n\t\t// List of items for search bar\n\t\tfilteredItems: [],\n\t\titemModifiers: [{\"id\": 1, \"description\": \"No Veg\"}, {\"id\": 2, \"description\": \"No Pork\"}, {\n\t\t\t\"id\": 3, \"description\": \"Add Mushrooms\"\n\t\t}],\n\t\tshowItemCustomisationModal: false,\n\t\t// The item that's about to be modified\n\t\tcurrentItem: {\"id\": \"0\", \"name\": \"\", \"price\": 0, \"modifiers\": []},\n\t\tcurrentItemNotes: \"\",\n\t\tshowOrderSummaryModal: false,\n\t\tcontactNumber: \"\",\n\t\t// If false, order is a delivery\n\t\tisCollection: true,\n\t\taddress: \"\",\n\t\tdeliveryCharge: 0\n\t};\n\n\tcomponentDidMount() {\n\t\t// Set the filtered items to the original items when the component is first mounted\n\t\tthis.setState({\n\t\t\tfilteredItems: this.state.originalItems\n\t\t});\n\t}\n\n\t// Handles when the user clicks add on a specific item (on the main page)\n\thandleAddItemClick = (event) => {\n\t\tlet itemId = event.target.name;\n\n\t\t// Find the actual item\n\t\tlet desiredItem = this.state.originalItems.find(item => item.id === itemId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tdesiredItem = JSON.parse(JSON.stringify(desiredItem));\n\n\t\t// Add the item to array\n\t\tthis.setState({selectedItems: this.state.selectedItems.concat(desiredItem)});\n\t};\n\n\t// Pass id directly - could be clicking on any element within container, so event.target.name might be undefined\n\thandleItemCustomisationModalShow = (itemId) => {\n\t\tlet selectedItem = this.state.originalItems.find(item => item.id === itemId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tselectedItem = JSON.parse(JSON.stringify(selectedItem));\n\n\t\tthis.setState({currentItem: selectedItem});\n\n\t\tthis.setState({showItemCustomisationModal: true});\n\t};\n\n\thandleItemCustomisationModalClose = () => this.setState({showItemCustomisationModal: false});\n\n\t// Handle the click of a modifier button for a modifier that is not present on the current item (need to add the modifier)\n\thandleAddItemModifierButtonClick = (event) => {\n\t\tlet modifierId = parseInt(event.target.name);\n\t\t// Get the modifier\n\t\tlet desiredModifier = this.state.itemModifiers.find(modifier => modifier.id === modifierId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tdesiredModifier = JSON.parse(JSON.stringify(desiredModifier));\n\n\t\t// Add the modification to the item's list of modifications\n\t\tlet updatedCurrentItem = this.state.currentItem;\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.concat(desiredModifier);\n\t\tthis.setState({currentItem: updatedCurrentItem});\n\t};\n\n\t// Handle the click of a modifier button for a modifier that is already present on the current item (need to remove the modifier)\n\thandleRemoveItemModifierButtonClick = (event) => {\n\t\tlet modifierId = parseInt(event.target.name);\n\n\t\t// Remove the modification to the item's list of modifications\n\t\tlet updatedCurrentItem = this.state.currentItem;\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.filter(modifier => modifier.id !== modifierId);\n\t\tthis.setState({currentItem: updatedCurrentItem});\n\t};\n\n\t// Handle the user clicking the add button on the customisation modal\n\thandleAddCustomisedItemClick = () => {\n\t\t// Add the currentItem to the list of selected items\n\t\tlet updatedSelectedItems = this.state.selectedItems;\n\t\tupdatedSelectedItems = updatedSelectedItems.concat(this.state.currentItem);\n\t\tthis.setState({selectedItems: updatedSelectedItems});\n\n\t\t// Reset the current item\n\t\tthis.setState({currentItem: {\"id\": 0, \"name\": \"\", \"price\": 0, \"modifiers\": []}});\n\n\t\t// Close the modal\n\t\tthis.setState({showItemCustomisationModal: false});\n\t};\n\n\t// Handles the user clicking the order summary footer bar\n\thandleOrderSummaryFooterClick = () => {\n\t\tthis.handleOrderSummaryModalShow();\n\t};\n\n\thandleOrderSummaryModalShow = () => {\n\t\tthis.setState({showOrderSummaryModal: true});\n\t};\n\n\thandleOrderSummaryModalClose = () => this.setState({showOrderSummaryModal: false});\n\n\t// Handles when the search bar is changed - filters the list of items\n\thandleSearchBarChange = (event) => {\n\t\tlet newList;\n\t\tlet searchText = event.target.value.toLowerCase();\n\n\t\tif (searchText !== \"\") {\n\t\t\tnewList = this.state.originalItems.filter(item => item.name.toLowerCase().includes(searchText));\n\t\t} else {\n\t\t\tnewList = this.state.originalItems;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfilteredItems: newList\n\t\t});\n\t};\n\n\thandleContactNumberChange = (event) => {\n\t\tlet contactNumber = event.target.value;\n\t\tthis.setState({contactNumber: contactNumber});\n\t};\n\n\t// Handles the clicking of any of the destination buttons\n\thandleDestinationButtonClick = (event) => {\n\t\tlet destination = event.target.name;\n\n\t\tswitch (destination) {\n\t\t\tcase 'collection':\n\t\t\t\tthis.setState({isCollection: true});\n\t\t\t\t// Reset the address and delivery charge field\n\t\t\t\tthis.setState({address: \"\"});\n\t\t\t\tthis.setState({deliveryCharge: 0});\n\t\t\t\tbreak;\n\t\t\tcase 'delivery':\n\t\t\t\tthis.setState({isCollection: false});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"Invalid destination selected\");\n\t\t}\n\t};\n\n\t// Handles the address bar text changing\n\thandleAddressInputChange = (event) => {\n\t\tlet inputAddress = event.target.value;\n\n\t\tthis.setState({address: inputAddress});\n\t};\n\n\thandleDeliveryChargeInputChange = (event) => {\n\t\t// NaN evaluates to false - thus returns 0\n\t\tlet charge = parseFloat(event.target.value) || 0;\n\n\t\tthis.setState({deliveryCharge: charge});\n\t};\n\n\t// Handles the item notes box changing in ItemCustomisationModal\n\thandleItemNotesOnChange = (event) => {\n\t\tlet itemNotes = event.target.value;\n\n\t\tthis.setState({currentItemNotes: itemNotes});\n\t\t// Get the current item and add a notes field to it\n\t\tlet updatedItem = this.state.currentItem;\n\t\tupdatedItem.notes = itemNotes;\n\t\tthis.setState({currentItem: updatedItem});\n\t};\n\n\t// Handles remove button click in order summary modal\n\thandleRemoveItemOnClick = (item) => {\n\t\t// Find the index of the item to be removed\n\t\tlet indexToRemove = this.state.selectedItems.findIndex(i => JSON.stringify(i) === JSON.stringify(item));\n\n\t\t// Remove the item from the list\n\t\tthis.setState({selectedItems: this.state.selectedItems.filter((_, i) => i !== indexToRemove)});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container className=\"main-container container-fluid no-padding\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/*<h1>Hello World</h1>*/}\n\t\t\t\t\t\t\t<ContactNumberInput onChange={this.handleContactNumberChange}/>\n\t\t\t\t\t\t\t<DestinationSelector isCollection={this.state.isCollection}\n\t\t\t\t\t\t\t\t\t\t\t\t onclickHandler={this.handleDestinationButtonClick}\n\t\t\t\t\t\t\t\t\t\t\t\t onAddressInputChange={this.handleAddressInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t onDeliveryChargeInputChange={this.handleDeliveryChargeInputChange}/>\n\t\t\t\t\t\t\t<SearchBar onChange={this.handleSearchBarChange}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t{this.state.filteredItems.map(item => <Item key={item.id} item={item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice={item.price}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleItemClick={this.handleItemCustomisationModalShow}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddItemClick={this.handleAddItemClick}/>)}\n\t\t\t\t\t</Row>\n\n\t\t\t\t</Container>\n\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\t<OrderSummary\n\t\t\t\t\t\ttotalPrice={this.state.selectedItems.reduce((total, item) => total + item.price, 0) + this.state.deliveryCharge}\n\t\t\t\t\t\ttotalNumItems={this.state.selectedItems.length}\n\t\t\t\t\t\thandleOrderSummaryClick={this.handleOrderSummaryFooterClick}/>\n\t\t\t\t</footer>\n\t\t\t\t<ItemCustomisationModal selectedItem={this.state.currentItem}\n\t\t\t\t\t\t\t\t\t\tmodifiers={this.state.itemModifiers}\n\t\t\t\t\t\t\t\t\t\tmodalShow={this.state.showItemCustomisationModal}\n\t\t\t\t\t\t\t\t\t\thandleModalClose={this.handleItemCustomisationModalClose}\n\t\t\t\t\t\t\t\t\t\thandleAddItemModifierButtonClick={this.handleAddItemModifierButtonClick}\n\t\t\t\t\t\t\t\t\t\thandleRemoveItemModifierButtonClick={this.handleRemoveItemModifierButtonClick}\n\t\t\t\t\t\t\t\t\t\thandleAddCustomisedItemClick={this.handleAddCustomisedItemClick}\n\t\t\t\t\t\t\t\t\t\thandleItemNotesOnChange={this.handleItemNotesOnChange}\n\t\t\t\t/>\n\t\t\t\t<OrderSummaryModal modalShow={this.state.showOrderSummaryModal}\n\t\t\t\t\t\t\t\t   handleModalClose={this.handleOrderSummaryModalClose}\n\t\t\t\t\t\t\t\t   selectedItems={this.state.selectedItems}\n\t\t\t\t\t\t\t\t   contactNumber={this.state.contactNumber}\n\t\t\t\t\t\t\t\t   address={this.state.address}\n\t\t\t\t\t\t\t\t   deliveryCharge={this.state.deliveryCharge}\n\t\t\t\t\t\t\t\t   handleRemoveItemOnClick={this.handleRemoveItemOnClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}