{"version":3,"sources":["components/OrderSummary.js","components/Item.js","components/ModifierButton.js","components/ItemCustomisationModal.js","components/OrderSummaryModal.js","components/SearchBar.js","components/ContactNumberInput.js","components/DestinationSelector.js","App.js","reportWebVitals.js","index.js"],"names":["OrderSummary","totalPrice","totalNumItems","handleOrderSummaryClick","Container","onClick","Row","Col","className","toFixed","colStyle","padding","Item","item","price","handleAddItemClick","handleItemClick","style","margin","boxShadow","display","alignItems","id","xs","fontSize","name","Button","size","ModifierButton","modifier","selectedItem","handleAddItemModifierButtonClick","handleRemoveItemModifierButtonClick","modifiers","some","m","variant","description","ItemCustomisationModal","modalShow","handleModalClose","handleSelectedItemNameOnChange","handleAddCustomisedItemClick","handleItemNotesOnChange","handleSelectedItemPriceOnChange","Modal","show","onHide","animation","centered","Header","closeButton","Title","Body","FormControl","type","value","onChange","width","map","placeholder","paddingLeft","InputGroup","Prepend","Text","step","OrderSummaryModal","copyText","handleCopyToClipboardClick","contactNumber","address","contactNumberText","addressText","navigator","clipboard","writeText","items","itemCount","forEach","key","JSON","stringify","itemCountObj","handleRemoveItemOnClick","handleDuplicateItemOnClick","itemSummary","clipboardSummary","Object","keys","num","object","parse","notes","undefined","itemLine","reduce","result","concat","this","i","paddingTop","paddingBottom","paddingRight","verticalAlign","marginBottom","flexDirection","justifyContent","addButtonStyle","removeButtonStyle","selectedItems","deliveryCharge","totalCost","total","deliveryChargeOutput","props","countedItems","countUniqueItems","marginLeft","fontWeight","createItemSummary","marginTop","calculateTotalCost","Component","inputStyle","SearchBar","ContactNumberInput","autoComplete","buttonStyle","DestinationSelector","addressInput","isCollection","onclickHandler","onAddressInputChange","onDeliveryChargeInputChange","App","state","originalItems","filteredItems","itemModifiers","showItemCustomisationModal","currentItem","currentItemNotes","showOrderSummaryModal","event","stopPropagation","itemId","target","desiredItem","find","setState","handleItemCustomisationModalShow","handleItemCustomisationModalClose","modifierId","parseInt","desiredModifier","updatedCurrentItem","filter","updatedSelectedItems","handleOrderSummaryFooterClick","handleOrderSummaryModalShow","handleOrderSummaryModalClose","handleSearchBarChange","newList","searchText","toLowerCase","replace","includes","handleContactNumberChange","handleDestinationButtonClick","console","log","handleAddressInputChange","inputAddress","handleDeliveryChargeInputChange","charge","parseFloat","newName","updatedItem","itemNotes","newPrice","indexToRemove","slice","reverse","findIndex","length","_","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8d07ed6.chunk.js","sourcesContent":["import {Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction OrderSummary({totalPrice, totalNumItems, handleOrderSummaryClick}) {\r\n\treturn (\r\n\t\t<Container onClick={handleOrderSummaryClick}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Number of items: \" + totalNumItems}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Total cost: £\" + totalPrice.toFixed(2)}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default OrderSummary;","import {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction Item({item, price, handleAddItemClick, handleItemClick}) {\r\n\treturn (\r\n\t\t<Container style={{margin: '5px', boxShadow: \"0 1px 2px 0 rgba(0,0,0,0.2)\", padding: \"5px 15px 5px 15px\"}}>\r\n\t\t\t<Row style={{display: \"flex\", alignItems: \"center\"}} onClick={() => handleItemClick(item.id)}>\r\n\t\t\t\t<Col style={colStyle} className=\"text-center\" xs={7}>\r\n\t\t\t\t\t<div style={{fontSize: \"small\"}}>{item.name}</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={2}>\r\n\t\t\t\t\t<div>{\"£\" + price.toFixed(2)}</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"text-right\" xs={3}>\r\n\t\t\t\t\t<Button name={item.id} onClick={handleAddItemClick} size=\"sm\" className=\"my-auto\">+</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nconst colStyle = {\r\n\tpadding: '0'\r\n};\r\n\r\nexport default Item;","import {Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport './../App.css';\r\n\r\nfunction ModifierButton({modifier, selectedItem, handleAddItemModifierButtonClick, handleRemoveItemModifierButtonClick}) {\r\n\tif (selectedItem.modifiers.some((m) => m.id === modifier.id)) {\r\n\t\t// Render blue button if modifier already exists in selected item\r\n\t\treturn (\r\n\t\t\t<Button variant=\"primary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleRemoveItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t} else {\r\n\t\t// Otherwise gray button\r\n\t\treturn (\r\n\t\t\t<Button variant=\"secondary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleAddItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModifierButton;","import {Button, Col, FormControl, InputGroup, Modal, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport ModifierButton from \"./ModifierButton\";\r\n\r\nfunction ItemCustomisationModal({\r\n\t\t\t\t\t\t\t\t\tmodalShow, modifiers, handleModalClose, selectedItem,\r\n\t\t\t\t\t\t\t\t\thandleSelectedItemNameOnChange, handleAddItemModifierButtonClick,\r\n\t\t\t\t\t\t\t\t\thandleRemoveItemModifierButtonClick, handleAddCustomisedItemClick,\r\n\t\t\t\t\t\t\t\t\thandleItemNotesOnChange, handleSelectedItemPriceOnChange\r\n\t\t\t\t\t\t\t\t}) {\r\n\treturn (\r\n\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Item Customisation</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<FormControl type=\"text\" value={selectedItem.name} onChange={handleSelectedItemNameOnChange}\r\n\t\t\t\t\t\t\t\t\t style={{width: \"100%\"}}/>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"mb-3\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{modifiers.map(modifier => <ModifierButton key={modifier.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   modifier={modifier}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   selectedItem={selectedItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleAddItemModifierButtonClick={handleAddItemModifierButtonClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleRemoveItemModifierButtonClick={handleRemoveItemModifierButtonClick}/>)}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs={8}>\r\n\t\t\t\t\t\t<FormControl onChange={handleItemNotesOnChange} type=\"text\" placeholder=\"Notes\"/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={{paddingLeft: \"0\"}}>\r\n\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<InputGroup.Text>£</InputGroup.Text>\r\n\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t<FormControl onChange={handleSelectedItemPriceOnChange} type=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t value={selectedItem.price} placeholder=\"Hello\" step=\"0.1\"/>\r\n\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t<Button onClick={handleAddCustomisedItemClick}>Add</Button>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ItemCustomisationModal;","import {Button, Col, Modal} from \"react-bootstrap\";\r\nimport React, {Component} from \"react\";\r\nimport {ChevronDownIcon, ChevronUpIcon, CopyIcon} from '@primer/octicons-react';\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nclass OrderSummaryModal extends Component {\r\n\t// Text that will be copied to the clipboard (holds the order summary and total cost)\r\n\tcopyText = \"\";\r\n\r\n\t// Return an object. key: JSON.stringify(item) value: count of the item\r\n\tcountUniqueItems(items) {\r\n\t\tlet itemCount = {};\r\n\t\titems.forEach((item) => {\r\n\t\t\tlet key = JSON.stringify(item);\r\n\t\t\t// let key = item;\r\n\t\t\titemCount[key] = (itemCount[key] || 0) + 1;\r\n\t\t});\r\n\t\treturn itemCount;\r\n\t}\r\n\r\n\t// Given an object (with item and count), create the text summary of items\r\n\tcreateItemSummary(itemCountObj, handleRemoveItemOnClick, handleDuplicateItemOnClick) {\r\n\t\t// Holds a list of summarised items (in human readable form)\r\n\t\tlet itemSummary = [];\r\n\t\tlet clipboardSummary = \"\";\r\n\t\tObject.keys(itemCountObj).forEach((item) => {\r\n\t\t\tlet num = itemCountObj[item];\r\n\t\t\t// parse into object\r\n\t\t\tlet object = JSON.parse(item);\r\n\t\t\tlet notes = object.notes !== undefined ? object.notes : \"\";\r\n\t\t\tlet itemLine = num + `x ` + object.name + ` ` + object.modifiers.reduce((result, modifier) => {\r\n\t\t\t\treturn `${result} ${modifier.description}`;\r\n\t\t\t}, \"\") + ` ` + notes;\r\n\t\t\tclipboardSummary += itemLine + \"\\n\";\r\n\t\t\titemSummary = itemSummary.concat(itemLine);\r\n\t\t});\r\n\t\tthis.copyText = clipboardSummary;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{itemSummary.map((item, i) =>\r\n\t\t\t\t\t<div key={i + \"div\"} className=\"row\" style={{paddingTop: \"3px\", paddingBottom: \"3px\"}}>\r\n\t\t\t\t\t\t<Col xs={7} style={{paddingRight: \"0\", display: \"flex\", alignItems: \"center\"}}>\r\n\t\t\t\t\t\t\t<p key={i + \"itemText\"}\r\n\t\t\t\t\t\t\t   style={{fontSize: \"small\", verticalAlign: \"middle\", marginBottom: \"0\"}}>{item}</p>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col style={{paddingLeft:\"5\", paddingRight:\"0\", display:\"flex\", alignItems:\"center\"}}>\r\n\t\t\t\t\t\t\t<div>{item.price}</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col style={{\r\n\t\t\t\t\t\t\tpaddingLeft: \"0\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Button key={\"duplicate\" + i} style={addButtonStyle} onClick={() => {\r\n\t\t\t\t\t\t\t\thandleDuplicateItemOnClick(JSON.parse(Object.keys(itemCountObj)[i]));\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<ChevronUpIcon size={16}/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button key={\"remove\" + i} style={removeButtonStyle} variant={\"danger\"} onClick={() => {\r\n\t\t\t\t\t\t\t\t// Pass the item that should be removed\r\n\t\t\t\t\t\t\t\thandleRemoveItemOnClick(JSON.parse(Object.keys(itemCountObj)[i]));\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<ChevronDownIcon size={16}/>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// Calculate the total cost and also append to copyText\r\n\tcalculateTotalCost(selectedItems, deliveryCharge) {\r\n\t\tlet totalCost = (selectedItems.reduce((total, item) => total + item.price, 0) + deliveryCharge).toFixed(2);\r\n\t\tthis.copyText += \"\\n£\" + totalCost;\r\n\t\treturn totalCost;\r\n\t}\r\n\r\n\thandleCopyToClipboardClick = (contactNumber, address) => {\r\n\t\tlet contactNumberText = (contactNumber === \"\") ? \"\" : `${contactNumber}\\n`;\r\n\t\tlet addressText = (address === \"\") ? \"\" : `${address}\\n`;\r\n\t\t// Add the contact number and address before writing to clipboard\r\n\t\tif ((navigator.clipboard)) {\r\n\t\t\tnavigator.clipboard.writeText(`${contactNumberText}${addressText}\\n${this.copyText}`);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet {\r\n\t\t\tmodalShow, handleModalClose, selectedItems, contactNumber, address, deliveryCharge, handleRemoveItemOnClick,\r\n\t\t\thandleDuplicateItemOnClick\r\n\t\t} = this.props;\r\n\t\tlet countedItems = this.countUniqueItems(selectedItems);\r\n\r\n\t\t// Conditionally render delivery charge component\r\n\t\tlet deliveryChargeOutput;\r\n\t\tif (deliveryCharge !== 0) {\r\n\t\t\tdeliveryChargeOutput = <p style={{marginBottom: \"0\"}}>Delivery Charge £{deliveryCharge.toFixed(2)}</p>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t\t<Modal.Title>Order Summary</Modal.Title>\r\n\t\t\t\t\t<Button onClick={() => this.handleCopyToClipboardClick(contactNumber, address)}\r\n\t\t\t\t\t\t\tstyle={{marginLeft: \"10px\"}}>\r\n\t\t\t\t\t\t<CopyIcon size={20}/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<p style={{fontWeight: \"bold\"}}>{contactNumber}</p>\r\n\t\t\t\t\t<p style={{fontWeight: \"bold\"}}>{address}</p>\r\n\r\n\t\t\t\t\t{this.createItemSummary(countedItems, handleRemoveItemOnClick, handleDuplicateItemOnClick)}\r\n\t\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t\t{deliveryChargeOutput}\r\n\t\t\t\t\t<p style={{fontWeight: \"bold\", fontSize: \"large\", marginTop: \"0\", marginBottom: \"0\"}}>Total Cost\r\n\t\t\t\t\t\t£{this.calculateTotalCost(selectedItems, deliveryCharge)}</p>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nOrderSummaryModal.propTypes = {\r\n\tmodalShow: PropTypes.any,\r\n\thandleModalClose: PropTypes.any,\r\n\tselectedItems: PropTypes.any,\r\n\tcontactNumber: PropTypes.any,\r\n\taddress: PropTypes.any,\r\n\tdeliveryCharge: PropTypes.any,\r\n\thandleRemoveItemOnClick: PropTypes.any\r\n};\r\n\r\nconst removeButtonStyle = {\r\n\tfontSize: 'small',\r\n\tpaddingLeft: '5px',\r\n\tpaddingRight: '5px',\r\n};\r\nconst addButtonStyle = {\r\n\tfontSize: 'small',\r\n\tpaddingLeft: '5px',\r\n\tpaddingRight: '5px',\r\n};\r\nexport default OrderSummaryModal;\r\n","import React from \"react\";\r\nimport {FormControl} from \"react-bootstrap\";\r\n\r\nfunction SearchBar({onChange}) {\r\n\treturn (\r\n\t\t<FormControl type=\"text\" placeholder=\"Search...\" onChange={onChange} style={inputStyle}/>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginLeft: '1px',\r\n\tpaddingBottom: '5px',\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '6px',\r\n\twidth: '100%'\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport {FormControl} from \"react-bootstrap\";\r\n\r\nfunction ContactNumberInput({onChange}) {\r\n\r\n\t// Otherwise gray button\r\n\treturn (\r\n\t\t<div className=\"text-center\" style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\t\t\t<FormControl style={inputStyle} type=\"text\" autoComplete=\"none\" placeholder=\"Contact Number\"\r\n\t\t\t\t\t\t onChange={onChange}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '5px',\r\n\twidth: '50%'\r\n};\r\n\r\nexport default ContactNumberInput;","import React from \"react\";\r\nimport {Button, Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\n\r\nfunction DestinationSelector({isCollection, onclickHandler, onAddressInputChange, onDeliveryChargeInputChange}) {\r\n\r\n\t// Conditionally render the address input (only if isCollection is false)\r\n\tlet addressInput;\r\n\tif (!isCollection) {\r\n\t\taddressInput =\r\n\r\n\t\t\t<Row style={{paddingTop: \"3px\", paddingBottom: \"3px\"}}>\r\n\t\t\t\t<Col xs={7} style={{paddingLeft: \"0\", paddingRight: \"0\"}}>\r\n\t\t\t\t\t<FormControl onChange={onAddressInputChange} autoComplete=\"none\" placeholder=\"Address\"\r\n\t\t\t\t\t\t\t\t style={{width: \"100%\"}}/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col style={{paddingLeft: \"0\", paddingRight: \"0\"}}>\r\n\t\t\t\t\t<Row style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n\t\t\t\t\t\t<Col xs={11}>\r\n\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>£</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl onChange={onDeliveryChargeInputChange} type=\"number\" step=\"0.1\"\r\n\t\t\t\t\t\t\t\t\t\t\t placeholder=\"Charge\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container className=\"container-fluid\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Button name=\"collection\" variant={isCollection ? \"primary\" : \"secondary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Collection</Button>\r\n\t\t\t\t<Button name=\"delivery\" variant={isCollection ? \"secondary\" : \"primary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Delivery</Button>\r\n\t\t\t</Row>\r\n\t\t\t{addressInput}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst buttonStyle = {\r\n\tmargin: '5px'\r\n};\r\n\r\nexport default DestinationSelector;","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport './App.css';\r\nimport OrderSummary from \"./components/OrderSummary\";\r\nimport Item from \"./components/Item\";\r\nimport ItemCustomisationModal from \"./components/ItemCustomisationModal\";\r\nimport OrderSummaryModal from \"./components/OrderSummaryModal\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport ContactNumberInput from \"./components/ContactNumberInput\";\r\nimport DestinationSelector from \"./components/DestinationSelector\";\r\nimport items from \"./items.json\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tselectedItems: [],\r\n\t\toriginalItems: items.items,\r\n\t\t// List of items for search bar\r\n\t\tfilteredItems: [],\r\n\t\titemModifiers: [{\"id\": 1, \"description\": \"No Veg\"}, {\"id\": 2, \"description\": \"No Pork\"}, {\r\n\t\t\t\"id\": 3, \"description\": \"Add Mushrooms\"\r\n\t\t}],\r\n\t\tshowItemCustomisationModal: false,\r\n\t\t// The item that's about to be modified\r\n\t\tcurrentItem: {\"id\": \"0\", \"name\": \"\", \"price\": 0, \"modifiers\": []},\r\n\t\tcurrentItemNotes: \"\",\r\n\t\tshowOrderSummaryModal: false,\r\n\t\tcontactNumber: \"\",\r\n\t\t// If false, order is a delivery\r\n\t\tisCollection: true,\r\n\t\taddress: \"\",\r\n\t\tdeliveryCharge: 0\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Set the filtered items to the original items when the component is first mounted\r\n\t\tthis.setState({\r\n\t\t\tfilteredItems: this.state.originalItems\r\n\t\t});\r\n\t}\r\n\r\n\t// Handles when the user clicks add on a specific item (on the main page)\r\n\thandleAddItemClick = (event) => {\r\n\t\t// Don't activate the item row's click event\r\n\t\tevent.stopPropagation();\r\n\t\tlet itemId = event.target.name;\r\n\r\n\t\t// Find the actual item\r\n\t\tlet desiredItem = this.state.originalItems.find(item => item.id === itemId);\r\n\t\t// find returns a reference, so make a copy of the object\r\n\t\tdesiredItem = JSON.parse(JSON.stringify(desiredItem));\r\n\r\n\t\t// Add the item to array\r\n\t\tthis.setState({selectedItems: this.state.selectedItems.concat(desiredItem)});\r\n\t};\r\n\r\n\t// Pass id directly - could be clicking on any element within container, so event.target.name might be undefined\r\n\thandleItemCustomisationModalShow = (itemId) => {\r\n\t\tlet selectedItem = this.state.originalItems.find(item => item.id === itemId);\r\n\t\t// find returns a reference, so make a copy of the object\r\n\t\tselectedItem = JSON.parse(JSON.stringify(selectedItem));\r\n\r\n\t\tthis.setState({currentItem: selectedItem});\r\n\r\n\t\tthis.setState({showItemCustomisationModal: true});\r\n\t};\r\n\r\n\thandleItemCustomisationModalClose = () => this.setState({showItemCustomisationModal: false});\r\n\r\n\t// Handle the click of a modifier button for a modifier that is not present on the current item (need to add the modifier)\r\n\thandleAddItemModifierButtonClick = (event) => {\r\n\t\tlet modifierId = parseInt(event.target.name);\r\n\t\t// Get the modifier\r\n\t\tlet desiredModifier = this.state.itemModifiers.find(modifier => modifier.id === modifierId);\r\n\t\t// find returns a reference, so make a copy of the object\r\n\t\tdesiredModifier = JSON.parse(JSON.stringify(desiredModifier));\r\n\r\n\t\t// Add the modification to the item's list of modifications\r\n\t\tlet updatedCurrentItem = this.state.currentItem;\r\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.concat(desiredModifier);\r\n\t\tthis.setState({currentItem: updatedCurrentItem});\r\n\t};\r\n\r\n\t// Handle the click of a modifier button for a modifier that is already present on the current item (need to remove the modifier)\r\n\thandleRemoveItemModifierButtonClick = (event) => {\r\n\t\tlet modifierId = parseInt(event.target.name);\r\n\r\n\t\t// Remove the modification to the item's list of modifications\r\n\t\tlet updatedCurrentItem = this.state.currentItem;\r\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.filter(modifier => modifier.id !== modifierId);\r\n\t\tthis.setState({currentItem: updatedCurrentItem});\r\n\t};\r\n\r\n\t// Handle the user clicking the add button on the customisation modal\r\n\thandleAddCustomisedItemClick = () => {\r\n\t\t// Add the currentItem to the list of selected items\r\n\t\tlet updatedSelectedItems = this.state.selectedItems;\r\n\t\tupdatedSelectedItems = updatedSelectedItems.concat(this.state.currentItem);\r\n\t\tthis.setState({selectedItems: updatedSelectedItems});\r\n\r\n\t\t// Reset the current item\r\n\t\tthis.setState({currentItem: {\"id\": 0, \"name\": \"\", \"price\": 0, \"modifiers\": []}});\r\n\r\n\t\t// Close the modal\r\n\t\tthis.setState({showItemCustomisationModal: false});\r\n\t};\r\n\r\n\t// Handles the user clicking the order summary footer bar\r\n\thandleOrderSummaryFooterClick = () => {\r\n\t\tthis.handleOrderSummaryModalShow();\r\n\t};\r\n\r\n\thandleOrderSummaryModalShow = () => {\r\n\t\tthis.setState({showOrderSummaryModal: true});\r\n\t};\r\n\r\n\thandleOrderSummaryModalClose = () => this.setState({showOrderSummaryModal: false});\r\n\r\n\t// Handles when the search bar is changed - filters the list of items\r\n\thandleSearchBarChange = (event) => {\r\n\t\tlet newList;\r\n\t\tlet searchText = event.target.value.toLowerCase();\r\n\t\tsearchText = searchText.replace(\"and\", \"&\");\r\n\r\n\t\tif (searchText !== \"\") {\r\n\t\t\tnewList = this.state.originalItems.filter(item => item.name.toLowerCase().includes(searchText));\r\n\t\t} else {\r\n\t\t\tnewList = this.state.originalItems;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tfilteredItems: newList\r\n\t\t});\r\n\t};\r\n\r\n\thandleContactNumberChange = (event) => {\r\n\t\tlet contactNumber = event.target.value;\r\n\t\tthis.setState({contactNumber: contactNumber});\r\n\t};\r\n\r\n\t// Handles the clicking of any of the destination buttons\r\n\thandleDestinationButtonClick = (event) => {\r\n\t\tlet destination = event.target.name;\r\n\r\n\t\tswitch (destination) {\r\n\t\t\tcase 'collection':\r\n\t\t\t\tthis.setState({isCollection: true});\r\n\t\t\t\t// Reset the address and delivery charge field\r\n\t\t\t\tthis.setState({address: \"\"});\r\n\t\t\t\tthis.setState({deliveryCharge: 0});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'delivery':\r\n\t\t\t\tthis.setState({isCollection: false});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Invalid destination selected\");\r\n\t\t}\r\n\t};\r\n\r\n\t// Handles the address bar text changing\r\n\thandleAddressInputChange = (event) => {\r\n\t\tlet inputAddress = event.target.value;\r\n\r\n\t\tthis.setState({address: inputAddress});\r\n\t};\r\n\r\n\thandleDeliveryChargeInputChange = (event) => {\r\n\t\t// NaN evaluates to false - thus returns 0\r\n\t\tlet charge = parseFloat(event.target.value) || 0;\r\n\r\n\t\tthis.setState({deliveryCharge: charge});\r\n\t};\r\n\r\n\t// Handles the item's name changing in ItemCustomisationModal\r\n\thandleSelectedItemNameOnChange = (event) => {\r\n\t\tlet newName = event.target.value;\r\n\t\tlet updatedItem = this.state.currentItem;\r\n\t\tupdatedItem.name = newName;\r\n\t\tthis.setState({currentItem: updatedItem});\r\n\t};\r\n\r\n\t// Handles the item notes box changing in ItemCustomisationModal\r\n\thandleItemNotesOnChange = (event) => {\r\n\t\tlet itemNotes = event.target.value;\r\n\r\n\t\tthis.setState({currentItemNotes: itemNotes});\r\n\t\t// Get the current item and add a notes field to it\r\n\t\tlet updatedItem = this.state.currentItem;\r\n\t\tupdatedItem.notes = itemNotes;\r\n\t\tthis.setState({currentItem: updatedItem});\r\n\t};\r\n\r\n\t// Handles the item's price changing in ItemCustomisationModal\r\n\thandleSelectedItemPriceOnChange = (event) => {\r\n\t\t// NaN evaluates to false - thus returns 0\r\n\t\tlet newPrice = parseFloat(event.target.value) || 0;\r\n\t\tlet updatedItem = this.state.currentItem;\r\n\t\tupdatedItem.price = newPrice;\r\n\t\tthis.setState({currentItem: updatedItem});\r\n\t};\r\n\r\n\t// Handles duplicate button click in order summary modal\r\n\thandleDuplicateItemOnClick = (item) => {\r\n\t\tlet updatedSelectedItems = this.state.selectedItems;\r\n\t\t// Duplicate the desired item\r\n\t\tupdatedSelectedItems = updatedSelectedItems.concat(item);\r\n\t\tthis.setState({selectedItems: updatedSelectedItems});\r\n\t};\r\n\r\n\t// Handles remove button click in order summary modal\r\n\thandleRemoveItemOnClick = (item) => {\r\n\t\t// Find index of the last occurrence of the item to be removed. Stops items from reordering when removing\r\n\t\tlet indexToRemove = this.state.selectedItems.slice().reverse().findIndex(i => JSON.stringify(i) === JSON.stringify(item));\r\n\r\n\t\t// Reverse the found index\r\n\t\tindexToRemove = this.state.selectedItems.length - 1 - indexToRemove;\r\n\r\n\t\t// Remove the item from the list\r\n\t\tthis.setState({selectedItems: this.state.selectedItems.filter((_, i) => i !== indexToRemove)});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Container className=\"main-container container-fluid no-padding\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t{/*<h1>Hello World</h1>*/}\r\n\t\t\t\t\t\t\t<ContactNumberInput onChange={this.handleContactNumberChange}/>\r\n\t\t\t\t\t\t\t<DestinationSelector isCollection={this.state.isCollection}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onclickHandler={this.handleDestinationButtonClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onAddressInputChange={this.handleAddressInputChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onDeliveryChargeInputChange={this.handleDeliveryChargeInputChange}/>\r\n\t\t\t\t\t\t\t<SearchBar onChange={this.handleSearchBarChange}/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row id=\"itemsList\">\r\n\t\t\t\t\t\t{this.state.filteredItems.map(item => <Item key={item.id} item={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice={item.price}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleItemClick={this.handleItemCustomisationModalShow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddItemClick={this.handleAddItemClick}/>)}\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container>\r\n\r\n\t\t\t\t<footer className=\"footer\">\r\n\t\t\t\t\t<OrderSummary\r\n\t\t\t\t\t\ttotalPrice={this.state.selectedItems.reduce((total, item) => total + item.price, 0) + this.state.deliveryCharge}\r\n\t\t\t\t\t\ttotalNumItems={this.state.selectedItems.length}\r\n\t\t\t\t\t\thandleOrderSummaryClick={this.handleOrderSummaryFooterClick}/>\r\n\t\t\t\t</footer>\r\n\t\t\t\t<ItemCustomisationModal selectedItem={this.state.currentItem}\r\n\t\t\t\t\t\t\t\t\t\tmodifiers={this.state.itemModifiers}\r\n\t\t\t\t\t\t\t\t\t\tmodalShow={this.state.showItemCustomisationModal}\r\n\t\t\t\t\t\t\t\t\t\thandleModalClose={this.handleItemCustomisationModalClose}\r\n\t\t\t\t\t\t\t\t\t\thandleSelectedItemNameOnChange={this.handleSelectedItemNameOnChange}\r\n\t\t\t\t\t\t\t\t\t\thandleAddItemModifierButtonClick={this.handleAddItemModifierButtonClick}\r\n\t\t\t\t\t\t\t\t\t\thandleRemoveItemModifierButtonClick={this.handleRemoveItemModifierButtonClick}\r\n\t\t\t\t\t\t\t\t\t\thandleAddCustomisedItemClick={this.handleAddCustomisedItemClick}\r\n\t\t\t\t\t\t\t\t\t\thandleItemNotesOnChange={this.handleItemNotesOnChange}\r\n\t\t\t\t\t\t\t\t\t\thandleSelectedItemPriceOnChange={this.handleSelectedItemPriceOnChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<OrderSummaryModal modalShow={this.state.showOrderSummaryModal}\r\n\t\t\t\t\t\t\t\t   handleModalClose={this.handleOrderSummaryModalClose}\r\n\t\t\t\t\t\t\t\t   selectedItems={this.state.selectedItems}\r\n\t\t\t\t\t\t\t\t   contactNumber={this.state.contactNumber}\r\n\t\t\t\t\t\t\t\t   address={this.state.address}\r\n\t\t\t\t\t\t\t\t   deliveryCharge={this.state.deliveryCharge}\r\n\t\t\t\t\t\t\t\t   handleRemoveItemOnClick={this.handleRemoveItemOnClick}\r\n\t\t\t\t\t\t\t\t   handleDuplicateItemOnClick={this.handleDuplicateItemOnClick}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}