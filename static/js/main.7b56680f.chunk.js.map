{"version":3,"sources":["components/OrderSummary.js","components/Item.js","components/ModifierButton.js","components/ItemCustomisationModal.js","components/OrderSummaryModal.js","components/SearchBar.js","components/ContactNumberInput.js","components/DestinationSelector.js","App.js","reportWebVitals.js","index.js"],"names":["OrderSummary","totalPrice","totalNumItems","handleOrderSummaryClick","Container","onClick","Row","Col","className","toFixed","Item","item","price","handleAddItemClick","handleItemClick","style","margin","boxShadow","id","xs","fontSize","name","Button","ModifierButton","modifier","selectedItem","handleAddItemModifierButtonClick","handleRemoveItemModifierButtonClick","modifiers","some","m","variant","description","ItemCustomisationModal","modalShow","handleModalClose","handleAddCustomisedItemClick","Modal","show","onHide","animation","centered","Header","closeButton","Title","Body","map","width","createItemSummary","itemCountObj","itemSummary","Object","keys","forEach","num","object","JSON","parse","concat","reduce","result","i","OrderSummaryModal","selectedItems","contactNumber","address","countedItems","items","itemCount","key","stringify","countUniqueItems","fontWeight","total","inputStyle","marginBottom","marginTop","SearchBar","onChange","type","placeholder","ContactNumberInput","autoComplete","buttonStyle","DestinationSelector","addressInput","isCollection","onclickHandler","onAddressInputChange","App","state","originalItems","filteredItems","itemModifiers","showItemCustomisationModal","currentItem","showOrderSummaryModal","event","itemId","target","desiredItem","find","setState","handleItemCustomisationModalShow","handleItemCustomisationModalClose","modifierId","parseInt","desiredModifier","updatedCurrentItem","filter","updatedSelectedItems","handleOrderSummaryFooterClick","handleOrderSummaryModalShow","handleOrderSummaryModalClose","handleSearchBarChange","newList","searchText","value","toLowerCase","includes","handleContactNumberChange","handleDestinationButtonClick","console","log","handleAddressInputChange","inputAddress","this","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b56680f.chunk.js","sourcesContent":["import {Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction OrderSummary({totalPrice, totalNumItems, handleOrderSummaryClick}) {\r\n\treturn (\r\n\t\t<Container onClick={handleOrderSummaryClick}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Number of items: \" + totalNumItems}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p className=\"summary-text\">{\"Total cost: Â£\" + totalPrice.toFixed(2)}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default OrderSummary;","import {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nfunction Item({item, price, handleAddItemClick, handleItemClick}) {\r\n\treturn (\r\n\t\t<Container style={{margin: '5px', boxShadow: \"0 1px 2px 0 rgba(0,0,0,0.2)\"}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col onClick={() => {\r\n\t\t\t\t\thandleItemClick(item.id);\r\n\t\t\t\t}} className=\"text-center\" xs={7}>\r\n\t\t\t\t\t<p style={{fontSize: \"small\"}}>{item.name}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<Col onClick={() => {\r\n\t\t\t\t\t\thandleItemClick(item.id);\r\n\t\t\t\t\t}} className=\"text-center\" xs={2}>\r\n\t\t\t\t\t\t<p>{\"Â£\" + price.toFixed(2)}</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Col className=\"text-center\" xs={2}>\r\n\t\t\t\t\t<Button name={item.id} onClick={handleAddItemClick}>Add</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\r\n\t);\r\n}\r\n\r\nexport default Item;","import {Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport './../App.css';\r\n\r\nfunction ModifierButton({modifier, selectedItem, handleAddItemModifierButtonClick, handleRemoveItemModifierButtonClick}) {\r\n\tif (selectedItem.modifiers.some((m) => m.id === modifier.id)) {\r\n\t\t// Render blue button if modifier already exists in selected item\r\n\t\treturn (\r\n\t\t\t<Button variant=\"primary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleRemoveItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t} else {\r\n\t\t// Otherwise gray button\r\n\t\treturn (\r\n\t\t\t<Button variant=\"secondary\" name={modifier.id} style={{margin: \"3px\"}}\r\n\t\t\t\t\tonClick={handleAddItemModifierButtonClick}>{modifier.description}</Button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModifierButton;","import {Button, Modal} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport ModifierButton from \"./ModifierButton\";\r\n\r\nfunction ItemCustomisationModal({modalShow, modifiers, handleModalClose, selectedItem, handleAddItemModifierButtonClick, handleRemoveItemModifierButtonClick, handleAddCustomisedItemClick}) {\r\n\treturn (\r\n\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Item Customisation</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<p>{selectedItem.name}</p>\r\n\t\t\t\t{modifiers.map(modifier => <ModifierButton key={modifier.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   modifier={modifier}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   selectedItem={selectedItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleAddItemModifierButtonClick={handleAddItemModifierButtonClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   handleRemoveItemModifierButtonClick={handleRemoveItemModifierButtonClick}/>)}\r\n\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t<Button onClick={handleAddCustomisedItemClick}>Add</Button>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ItemCustomisationModal;","import {Modal} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\n// Return an object. key: JSON.stringify(item) value: count of the item\r\nfunction countUniqueItems(items) {\r\n\tlet itemCount = {};\r\n\titems.forEach((item) => {\r\n\t\tlet key = JSON.stringify(item);\r\n\t\t// let key = item;\r\n\t\titemCount[key] = (itemCount[key] || 0) + 1;\r\n\t});\r\n\treturn itemCount;\r\n}\r\n\r\n// Given an object (with item and count), create the text summary of items\r\nfunction createItemSummary(itemCountObj) {\r\n\tlet itemSummary = [];\r\n\tObject.keys(itemCountObj).forEach((item) => {\r\n\t\tlet num = itemCountObj[item];\r\n\t\t// parse into object\r\n\t\tlet object = JSON.parse(item);\r\n\t\titemSummary = itemSummary.concat(num + \"x \" + object.name + \" \" + object.modifiers.reduce((result, item) => {\r\n\t\t\treturn `${result} ${item.description}`;\r\n\t\t}, \"\"));\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{itemSummary.map((item, i) => <p key={i}>{item}</p>)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction OrderSummaryModal({modalShow, handleModalClose, selectedItems, contactNumber, address}) {\r\n\tlet countedItems = countUniqueItems(selectedItems);\r\n\treturn (\r\n\t\t// animation set to false to avoid \"findDOMNode is deprecated in StrictMode\" error\r\n\t\t<Modal show={modalShow} onHide={handleModalClose} animation={false} centered>\r\n\t\t\t<Modal.Header closeButton={true}>\r\n\t\t\t\t<Modal.Title>Order Summary</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<p style={{fontWeight: \"bold\"}}>{contactNumber}</p>\r\n\t\t\t\t<p style={{fontWeight: \"bold\"}}>{address}</p>\r\n\r\n\t\t\t\t{createItemSummary(countedItems)}\r\n\t\t\t\t<hr style={{width: '95%'}}/>\r\n\t\t\t\t<p style={{fontWeight: \"bold\", fontSize: \"large\"}}>Total Cost\r\n\t\t\t\t\tÂ£{selectedItems.reduce((total, item) => total + item.price, 0).toFixed(2)}</p>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default OrderSummaryModal;\r\n","import React from \"react\";\r\n\r\nfunction SearchBar({onChange}) {\r\n\treturn (\r\n\t\t<input type=\"text\" placeholder=\"Search...\" onChange={onChange} style={inputStyle}/>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '5px',\r\n\twidth: '100%'\r\n};\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nfunction ContactNumberInput({onChange}) {\r\n\r\n\t// Otherwise gray button\r\n\treturn (\r\n\t\t<div className=\"text-center\">\r\n\t\t\t<input style={inputStyle} type=\"text\" autoComplete=\"none\" placeholder=\"Contact Number\" onChange={onChange}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst inputStyle = {\r\n\tmarginBottom: '5px',\r\n\tmarginTop: '5px',\r\n\twidth: '50%'\r\n};\r\n\r\nexport default ContactNumberInput;","import React from \"react\";\r\nimport {Button, Container, Row} from \"react-bootstrap\";\r\n\r\nfunction DestinationSelector({isCollection, onclickHandler, onAddressInputChange}) {\r\n\r\n\t// Conditionally render the address input (only if isCollection is false)\r\n\tlet addressInput;\r\n\tif (!isCollection) {\r\n\t\taddressInput =\r\n\t\t\t<input onChange={onAddressInputChange} autoComplete=\"none\" placeholder=\"Address\" style={{width: '100%'}}/>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Button name=\"collection\" variant={isCollection ? \"primary\" : \"secondary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Collection</Button>\r\n\t\t\t\t<Button name=\"delivery\" variant={isCollection ? \"secondary\" : \"primary\"} onClick={onclickHandler}\r\n\t\t\t\t\t\tstyle={buttonStyle}>Delivery</Button>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t{addressInput}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst buttonStyle = {\r\n\tmargin: '5px'\r\n};\r\n\r\nexport default DestinationSelector;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './App.css';\nimport OrderSummary from \"./components/OrderSummary\";\nimport Item from \"./components/Item\";\nimport ItemCustomisationModal from \"./components/ItemCustomisationModal\";\nimport OrderSummaryModal from \"./components/OrderSummaryModal\";\nimport SearchBar from \"./components/SearchBar\";\nimport ContactNumberInput from \"./components/ContactNumberInput\";\nimport DestinationSelector from \"./components/DestinationSelector\";\nimport items from \"./items.json\";\n\nclass App extends Component {\n\tstate = {\n\t\tselectedItems: [],\n\t\toriginalItems: items.items,\n\t\t// List of items for search bar\n\t\tfilteredItems: [],\n\t\titemModifiers: [{\"id\": 1, \"description\": \"No Veg\"}, {\"id\": 2, \"description\": \"No Pork\"}, {\n\t\t\t\"id\": 3, \"description\": \"Add Mushrooms\"\n\t\t}],\n\t\tshowItemCustomisationModal: false,\n\t\t// The item that's about to be modified\n\t\tcurrentItem: {\"id\": \"0\", \"name\": \"\", \"price\": 0, \"modifiers\": []},\n\t\tshowOrderSummaryModal: false,\n\t\tcontactNumber: \"\",\n\t\t// If false, order is a delivery\n\t\tisCollection: true,\n\t\taddress: \"\"\n\t};\n\n\tcomponentDidMount() {\n\t\t// Set the filtered items to the original items when the component is first mounted\n\t\tthis.setState({\n\t\t\tfilteredItems: this.state.originalItems\n\t\t});\n\t}\n\n\t// Handles when the user clicks add on a specific item (on the main page)\n\thandleAddItemClick = (event) => {\n\t\tlet itemId = event.target.name;\n\n\t\t// Find the actual item\n\t\tlet desiredItem = this.state.originalItems.find(item => item.id === itemId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tdesiredItem = JSON.parse(JSON.stringify(desiredItem));\n\n\t\t// Add the item to array\n\t\tthis.setState({selectedItems: this.state.selectedItems.concat(desiredItem)});\n\t};\n\n\t// Pass id directly - could be clicking on any element within container, so event.target.name might be undefined\n\thandleItemCustomisationModalShow = (itemId) => {\n\t\tlet selectedItem = this.state.originalItems.find(item => item.id === itemId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tselectedItem = JSON.parse(JSON.stringify(selectedItem));\n\n\t\tthis.setState({currentItem: selectedItem});\n\n\t\tthis.setState({showItemCustomisationModal: true});\n\t};\n\n\thandleItemCustomisationModalClose = () => this.setState({showItemCustomisationModal: false});\n\n\t// Handle the click of a modifier button for a modifier that is not present on the current item (need to add the modifier)\n\thandleAddItemModifierButtonClick = (event) => {\n\t\tlet modifierId = parseInt(event.target.name);\n\t\t// Get the modifier\n\t\tlet desiredModifier = this.state.itemModifiers.find(modifier => modifier.id === modifierId);\n\t\t// find returns a reference, so make a copy of the object\n\t\tdesiredModifier = JSON.parse(JSON.stringify(desiredModifier));\n\n\t\t// Add the modification to the item's list of modifications\n\t\tlet updatedCurrentItem = this.state.currentItem;\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.concat(desiredModifier);\n\t\tthis.setState({currentItem: updatedCurrentItem});\n\t};\n\n\t// Handle the click of a modifier button for a modifier that is already present on the current item (need to remove the modifier)\n\thandleRemoveItemModifierButtonClick = (event) => {\n\t\tlet modifierId = parseInt(event.target.name);\n\n\t\t// Remove the modification to the item's list of modifications\n\t\tlet updatedCurrentItem = this.state.currentItem;\n\t\tupdatedCurrentItem.modifiers = updatedCurrentItem.modifiers.filter(modifier => modifier.id !== modifierId);\n\t\tthis.setState({currentItem: updatedCurrentItem});\n\t};\n\n\t// Handle the user clicking the add button on the customisation modal\n\thandleAddCustomisedItemClick = () => {\n\t\t// Add the currentItem to the list of selected items\n\t\tlet updatedSelectedItems = this.state.selectedItems;\n\t\tupdatedSelectedItems = updatedSelectedItems.concat(this.state.currentItem);\n\t\tthis.setState({selectedItems: updatedSelectedItems});\n\n\t\t// Reset the current item\n\t\tthis.setState({currentItem: {\"id\": 0, \"name\": \"\", \"price\": 0, \"modifiers\": []}});\n\n\t\t// Close the modal\n\t\tthis.setState({showItemCustomisationModal: false});\n\t};\n\n\t// Handles the user clicking the order summary footer bar\n\thandleOrderSummaryFooterClick = () => {\n\t\tthis.handleOrderSummaryModalShow();\n\t};\n\n\thandleOrderSummaryModalShow = () => {\n\t\tthis.setState({showOrderSummaryModal: true});\n\t};\n\n\thandleOrderSummaryModalClose = () => this.setState({showOrderSummaryModal: false});\n\n\t// Handles when the search bar is changed - filters the list of items\n\thandleSearchBarChange = (event) => {\n\t\tlet newList;\n\t\tlet searchText = event.target.value.toLowerCase();\n\n\t\tif (searchText !== \"\") {\n\t\t\tnewList = this.state.originalItems.filter(item => item.name.toLowerCase().includes(searchText));\n\t\t} else {\n\t\t\tnewList = this.state.originalItems;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfilteredItems: newList\n\t\t});\n\t};\n\n\thandleContactNumberChange = (event) => {\n\t\tlet contactNumber = event.target.value;\n\t\tthis.setState({contactNumber: contactNumber});\n\t};\n\n\t// Handles the clicking of any of the destination buttons\n\thandleDestinationButtonClick = (event) => {\n\t\tlet destination = event.target.name;\n\n\t\tswitch (destination) {\n\t\t\tcase 'collection':\n\t\t\t\tthis.setState({isCollection: true});\n\t\t\t\tbreak;\n\t\t\tcase 'delivery':\n\t\t\t\tthis.setState({isCollection: false});\n\t\t\t\t// Reset the address field\n\t\t\t\tthis.setState({address: \"\"});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"Invalid destination selected\");\n\t\t}\n\t};\n\n\t// Handles the address bar text changing\n\thandleAddressInputChange = (event) => {\n\t\tlet inputAddress = event.target.value;\n\n\t\tthis.setState({address: inputAddress});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container className=\"main-container container-fluid no-padding\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/*<h1>Hello World</h1>*/}\n\t\t\t\t\t\t\t<DestinationSelector isCollection={this.state.isCollection}\n\t\t\t\t\t\t\t\t\t\t\t\t onclickHandler={this.handleDestinationButtonClick}\n\t\t\t\t\t\t\t\t\t\t\t\t onAddressInputChange={this.handleAddressInputChange}/>\n\t\t\t\t\t\t\t<ContactNumberInput onChange={this.handleContactNumberChange}/>\n\t\t\t\t\t\t\t<SearchBar onChange={this.handleSearchBarChange}/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t{this.state.filteredItems.map(item => <Item key={item.id} item={item}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprice={item.price}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleItemClick={this.handleItemCustomisationModalShow}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddItemClick={this.handleAddItemClick}/>)}\n\t\t\t\t\t</Row>\n\n\t\t\t\t</Container>\n\n\t\t\t\t<footer className=\"footer\">\n\t\t\t\t\t<OrderSummary totalPrice={this.state.selectedItems.reduce((total, item) => total + item.price, 0)}\n\t\t\t\t\t\t\t\t  totalNumItems={this.state.selectedItems.length}\n\t\t\t\t\t\t\t\t  handleOrderSummaryClick={this.handleOrderSummaryFooterClick}/>\n\t\t\t\t</footer>\n\t\t\t\t<ItemCustomisationModal selectedItem={this.state.currentItem}\n\t\t\t\t\t\t\t\t\t\tmodifiers={this.state.itemModifiers}\n\t\t\t\t\t\t\t\t\t\tmodalShow={this.state.showItemCustomisationModal}\n\t\t\t\t\t\t\t\t\t\thandleModalClose={this.handleItemCustomisationModalClose}\n\t\t\t\t\t\t\t\t\t\thandleAddItemModifierButtonClick={this.handleAddItemModifierButtonClick}\n\t\t\t\t\t\t\t\t\t\thandleRemoveItemModifierButtonClick={this.handleRemoveItemModifierButtonClick}\n\t\t\t\t\t\t\t\t\t\thandleAddCustomisedItemClick={this.handleAddCustomisedItemClick}\n\t\t\t\t/>\n\t\t\t\t<OrderSummaryModal modalShow={this.state.showOrderSummaryModal}\n\t\t\t\t\t\t\t\t   handleModalClose={this.handleOrderSummaryModalClose}\n\t\t\t\t\t\t\t\t   selectedItems={this.state.selectedItems}\n\t\t\t\t\t\t\t\t   contactNumber={this.state.contactNumber}\n\t\t\t\t\t\t\t\t   address={this.state.address}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}